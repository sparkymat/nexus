// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package dbx

import (
	"database/sql/driver"
	"fmt"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type PropertyType string

const (
	PropertyTypeString  PropertyType = "string"
	PropertyTypeInteger PropertyType = "integer"
	PropertyTypeFloat   PropertyType = "float"
	PropertyTypeBoolean PropertyType = "boolean"
	PropertyTypeObject  PropertyType = "object"
	PropertyTypeImage   PropertyType = "image"
	PropertyTypeDate    PropertyType = "date"
)

func (e *PropertyType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = PropertyType(s)
	case string:
		*e = PropertyType(s)
	default:
		return fmt.Errorf("unsupported scan type for PropertyType: %T", src)
	}
	return nil
}

type NullPropertyType struct {
	PropertyType PropertyType
	Valid        bool // Valid is true if PropertyType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullPropertyType) Scan(value interface{}) error {
	if value == nil {
		ns.PropertyType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.PropertyType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullPropertyType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.PropertyType), nil
}

type Object struct {
	ID                uuid.UUID
	Name              string
	AlternateNamesCsv string
	IsTemplate        bool
	TemplateID        uuid.NullUUID
	CreatedAt         pgtype.Timestamp
	UpdatedAt         pgtype.Timestamp
}

type Property struct {
	ID            uuid.UUID
	Name          string
	ObjectID      uuid.UUID
	TemplateID    uuid.NullUUID
	PropertyType  PropertyType
	StringValue   pgtype.Text
	IntegerValue  pgtype.Int8
	FloatValue    pgtype.Float8
	ObjectValueID uuid.NullUUID
	DateValue     pgtype.Date
	BooleanValue  pgtype.Bool
	ImagePath     pgtype.Text
	CreatedAt     pgtype.Timestamp
	UpdatedAt     pgtype.Timestamp
}

type SchemaMigration struct {
	Version int64
	Dirty   bool
}

type User struct {
	ID                uuid.UUID
	Name              string
	Email             string
	EncryptedPassword string
	CreatedAt         pgtype.Timestamp
	UpdatedAt         pgtype.Timestamp
}
